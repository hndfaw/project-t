{"version":3,"sources":["apiCalls.js","actions/index.js","containers/TeamsContainer.js","containers/AddTeam.js","containers/App.js","reducers/index.js","reducers/dataReducer.js","index.js"],"names":["fetchData","fetch","then","res","json","data","catch","Error","fetchDeleteTeam","id","concat","method","fetchAddTeam","newTeam","headers","content-type","body","JSON","stringify","setData","type","TeamsContainer","deleteTeam","e","parseInt","target","_this","props","handleSetData","console","log","_this2","this","team","map","react_default","a","createElement","key","style","border","name","sport","head_coach","onClick","Component","connect","state","dispatch","AddTeam","headCoach","sbumitNewTeam","preventDefault","_this$state","Date","getTime","handleOnChange","setState","Object","defineProperty","value","placeholder","onChange","App","className","containers_AddTeam","containers_TeamsContainer","rootReducer","combineReducers","arguments","length","undefined","action","store","createStore","composeWithDevTools","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.c78cd4da.chunk.js","sourcesContent":["export const fetchData = () => {\n  return fetch('http://localhost:3001/api/v1/sport-teams')\n    .then(res => res.json())\n    .then(data => data)\n    .catch(Error => Error('Error fethcing data'));\n}\n\nexport const fetchDeleteTeam = id => {\n  return fetch(`http://localhost:3001/api/v1/sport-teams/${id}`, {\n    method: 'DELETE',\n  })\n    .catch(Error => Error('Error fethcing data'));\n}\n\nexport const fetchAddTeam = newTeam => {\n  return fetch('http://localhost:3001/api/v1/sport-teams', {\n    method: 'POST',\n    headers: {'content-type' : 'application/json'},\n    body: JSON.stringify(newTeam)\n\n  })\n    .catch(Error => Error('Error fethcing data'));\n}","export const setData = data => ({\n  type: 'SET_DATA',\n  data\n})","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchDeleteTeam, fetchData } from '../apiCalls';\nimport { setData } from '../actions';\n\nclass TeamsContainer extends Component {\n\n  deleteTeam = e => {\n    fetchDeleteTeam(parseInt(e.target.id)).then(() =>\n      fetchData().then(data =>\n       this.props.handleSetData(data)\n      )\n    )\n    console.log(parseInt(e.target.id))\n  }\n\n  render() {\n    console.log(this.props.data)\n    const { data } = this.props;\n    const team = data.map(team => {\n      return (\n        <div key={team.id} style={{border: '1px solid gray'}}>\n            <p><span>Name: </span>{team.name}</p>\n            <p><span>Sport: </span>{team.sport}</p>\n            <p><span>Head Coach: </span>{team.head_coach}</p>\n            <button onClick={this.deleteTeam} id={team.id}>Delete</button>\n        </div>\n      )\n    })\n    return (\n      <div >\n        {team}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n})\n\nconst mapDispatchToProps = dispatch => ({\n  handleSetData: data => dispatch(setData(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamsContainer)","import React, { Component } from 'react';\nimport { fetchAddTeam, fetchData } from '../apiCalls';\nimport { setData } from '../actions';\nimport { connect } from 'react-redux';\n\n\nclass AddTeam extends Component {\n  state = {\n    name: '',\n    sport: '',\n    headCoach: ''\n  }\n\n  sbumitNewTeam = e => {\n    e.preventDefault();\n\n    const {name, sport , headCoach} = this.state;\n    const id = new Date().getTime();\n    const newTeam = {\n      id,\n      name,\n      sport,\n      head_coach: headCoach,\n    }\n    fetchAddTeam(newTeam).then(fetchData().then(data =>\n      this.props.handleSetData(data)\n    ))\n  }\n\n  handleOnChange = e => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n\n  render() {\n    return (\n      <form >\n          <input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={this.handleOnChange} />\n          <input type=\"text\" placeholder=\"Sport\" name=\"sport\" onChange={this.handleOnChange} />\n          <input type=\"text\" placeholder=\"Head Coach\" name=\"headCoach\" onChange={this.handleOnChange} />\n          <button onClick={this.sbumitNewTeam}>Submit</button>\n      </form>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleSetData: data => dispatch(setData(data))\n})\n\nexport default  connect(null, mapDispatchToProps)(AddTeam);\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../apiCalls';\nimport { setData } from '../actions';\nimport TeamsContainer from './TeamsContainer';\nimport AddTeam from './AddTeam';\n\nclass App extends Component {\n\n  componentDidMount () {\n\n    fetchData().then(data => \n      this.props.handleSetData(data)\n      )\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n          <AddTeam />\n          <TeamsContainer />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleSetData: data => dispatch(setData(data))\n})\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { dataReducer } from './dataReducer';\n\nexport const rootReducer = combineReducers({\n  data: dataReducer,\n})","export const dataReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'SET_DATA':\n      return action.data\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './reducers';\n\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}